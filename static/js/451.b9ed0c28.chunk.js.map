{"version":3,"file":"static/js/451.b9ed0c28.chunk.js","mappings":"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","sources":["components/App/App.styled.jsx","redux/contacts/selectors.js","components/ContactForm/Shema.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/PhoneBook/ContactListItem/ContactListItem.styled.jsx","components/PhoneBook/ContactListItem/ContactListItem.jsx","components/PhoneBook/PhoneBook.styled.jsx","components/PhoneBook/PhoneBook.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ErrorMessage/ErrorMessage.jsx","components/Loader/Loader.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 20px 20px;\n  margin: 50px auto;\n  width: 500px;\n  height: 600px;\n  border-radius: 10%;\n  background-color: #ffffff;\n  box-shadow: 10px 10px 5px 0px rgba(0, 0, 0, 0.64);\n  -webkit-box-shadow: 10px 10px 5px 0px rgba(0, 0, 0, 0.64);\n  -moz-box-shadow: 10px 10px 5px 0px rgba(0, 0, 0, 0.64);\n  overflow: hidden;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 20px;\n  text-align: center;\n  font-weight: 400;\n  font-size: 40px;\n`;\n\nexport const SubTitle = styled.h2`\n  margin-bottom: 20px;\n  text-align: center;\n  font-weight: 400;\n  font-size: 30px;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContact = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) => name.toLowerCase().includes(filter));\n  }\n);\n","import * as yup from 'yup';\n\nexport const schema = yup.object().shape({\n  name: yup\n    .string()\n    .trim()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagna\"\n    )\n    .min(5, 'To short. Minimum 5 letters')\n    .max(30, 'To long. Maximum 30 letters')\n    .required(),\n  number: yup\n    .string()\n    .trim()\n    .min(8, 'To short. Minimum 8 digits')\n    .max(30, 'To long. Maximum 30 digits')\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required(),\n});\n","import styled from '@emotion/styled';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const InputItem = styled.label`\n  margin-bottom: 20px;\n  width: 300px;\n  margin: 20px auto;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const InputLabel = styled.span`\n  display: block;\n  font-size: 14px;\n  display: block;\n  margin-top: 30px;\n`;\n\nexport const Input = styled(Field)`\n  font-size: inherit;\n  font-family: inherit;\n  display: block;\n  width: 300px;\n  height: 20px;\n  border-top: 0;\n  border-left: 0;\n  border-right: 0;\n  border-width: 3px;\n  border-image: linear-gradient(to right, #818588, #22bbe6);\n  border-image-slice: 1;\n  background: transparent;\n`;\n\nexport const SubmitBtn = styled.button`\n  display: block;\n  margin: 0 auto 20px auto;\n  width: 100px;\n  height: 30px;\n  text-align: center;\n  font-size: 16px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  border-style: none;\n  color: #ffffff;\n  background: #818588;\n  background: linear-gradient(to right, #818588, #81bdd3, , #22bbe6);\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n    transition: transform 500ms cubic-bezier(0.4, 0, 0.2, 1);\n    -webkit-transform: scale(1.1);\n    -moz-transform: scale(1.1);\n  }\n`;\n\nexport const ValidationError = styled(ErrorMessage)`\n  color: red;\n`;\n","import { Formik, Form } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operation';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { schema } from './Shema';\nimport { toast } from 'react-toastify';\nimport {\n  InputItem,\n  Input,\n  InputLabel,\n  SubmitBtn,\n  ValidationError,\n} from './ContactForm.styled';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = (values, { resetForm }) => {\n    const name = values.name;\n    for (const contact of contacts) {\n      if (contact.name.toLowerCase() === name.toLowerCase()) {\n        toast.info('This contact exist in your list');\n        return;\n      }\n    }\n    dispatch(addContact(values));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <InputItem>\n          <InputLabel>Name:</InputLabel>\n          <Input type=\"text\" name=\"name\" />\n          <ValidationError component=\"span\" name=\"name\" />\n        </InputItem>\n        <InputItem>\n          <InputLabel>Number:</InputLabel>\n          <Input type=\"tel\" name=\"number\" />\n          <ValidationError component=\"span\" name=\"number\" />\n        </InputItem>\n        <SubmitBtn type=\"submit\">Add contact</SubmitBtn>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  &:not(last-child) {\n    margin-bottom: 20px;\n  }\n  span {\n    margin-left: 10px;\n  }\n  button {\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n    border-radius: 4px;\n    border-style: none;\n    color: #ffffff;\n    background: #818588;\n    background: linear-gradient(to right, #818588, #81bdd3, #22bbe6);\n    &:hover,\n    &:focus {\n      transform: scale(1.1);\n      transition: transform 500ms cubic-bezier(0.4, 0, 0.2, 1);\n      -webkit-transform: scale(1.1);\n      -moz-transform: scale(1.2);\n    }\n  }\n`;\n","import { Container } from './ContactListItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operation';\n\nconst ContactListItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <Container>\n      <p>\n        {contact.name}:<span>{contact.number}</span>\n      </p>\n      <button type=\"button\" onClick={handleDelete}>\n        Delete\n      </button>\n    </Container>\n  );\n};\n\nexport default ContactListItem;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 320px;\n  height: 200px;\n  padding: 0 10px;\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  overflow: auto;\n`;\n\nexport const ContactList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  padding: 0px;\n`;\n","import ContactListItem from './ContactListItem';\nimport { Container, ContactList } from './PhoneBook.styled';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContact } from 'redux/contacts/selectors';\n\nconst PhoneBook = () => {\n  const filteredContacts = useSelector(selectVisibleContact);\n\n  return (\n    <Container>\n      <ContactList>\n        {filteredContacts.map(contact => {\n          return <ContactListItem key={contact.id} contact={contact} />;\n        })}\n      </ContactList>\n    </Container>\n  );\n};\n\nexport default PhoneBook;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto 20px auto;\n  lable {\n    display: block;\n    font-size: 14px;\n    display: block;\n  }\n  input {\n    display: block;\n    width: 300px;\n    height: 20px;\n    border-top: 0;\n    border-left: 0;\n    border-right: 0;\n    border-width: 3px;\n    border-image: linear-gradient(to right, #818588, #22bbe6);\n    border-image-slice: 1;\n    background: transparent;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/filterSlice';\nimport { Container } from './Filter.styled';\n\nconst Filter = ({ value }) => {\n  const dispatch = useDispatch();\n\n  const handleFilter = evt => {\n    const filter = evt.currentTarget.value;\n    dispatch(changeFilter(filter));\n  };\n\n  return (\n    <Container>\n      <label>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          onChange={handleFilter}\n          required\n        />\n      </label>\n    </Container>\n  );\n};\n\nexport default Filter;\n","import { Container } from 'components/App/App.styled';\n\nconst ErrorMessage = () => {\n  return (\n    <Container>Sorry, something goes wrong :-( Try again later...</Container>\n  );\n};\n\nexport default ErrorMessage;\n","import { RingLoader } from 'react-spinners';\n\nconst override = {\n  display: 'block',\n  margin: '0 140px',\n  opacity: '0.3',\n};\n\nconst Loader = () => {\n  return (\n    <RingLoader\n      cssOverride={override}\n      size={120}\n      aria-label=\"Loading Spinner\"\n    />\n  );\n};\n\nexport default Loader;\n","import { Container, Title, SubTitle } from 'components/App/App.styled';\nimport ContactForm from 'components/ContactForm';\nimport PhoneBook from 'components/PhoneBook';\nimport Filter from 'components/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operation';\nimport ErrorMessage from 'components/ErrorMessage';\nimport Loader from 'components/Loader';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      {isLoading && !error && <Loader />}\n      {error && <ErrorMessage />}\n      {contacts.length > 0 && !isLoading && (\n        <div>\n          <SubTitle>Contacts:</SubTitle>\n          <Filter />\n          <PhoneBook />\n        </div>\n      )}\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["Container","styled","Title","SubTitle","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContact","createSelector","filter","name","toLowerCase","includes","schema","yup","shape","trim","matches","min","max","required","number","InputItem","InputLabel","Input","Field","SubmitBtn","ValidationError","ErrorMessage","initialValues","dispatch","useDispatch","useSelector","validationSchema","onSubmit","values","resetForm","toast","addContact","type","component","contact","onClick","deleteContact","id","ContactList","filteredContacts","map","value","onChange","evt","currentTarget","changeFilter","override","display","margin","opacity","RingLoader","cssOverride","size","useEffect","fetchContacts","length"],"sourceRoot":""}